#!/usr/bin/env ruby
require 'rubygems'
require 'date'
require 'erb'

class String
  def color(value)
    colors = {:red =>"\033[93m", :blue => "\033[94m", :purple => "\033[95m", :green => "\033[92m"}
    endc = "\033[0m"      
    (colors[value] || "") + self + endc
  end
end

def assert(b, msg)
  unless b
    puts msg.color(:red)
    exit
  end
end

def log(x)
  puts "\n#{x}".color(:blue)
end

def err(x)
  puts x.color(:red)
end

def exc(x)
  puts "$ #{x}".color(:purple)
  `#{x}`
end

assert ARGV.size != 0, "USAGE: #{$0} [gem name]"

name = ARGV[0]
assert name !~ /\s/, "gem name cannot contain spaces."

version = "0.0.1"
date = Date.today.to_s
year = Date.today.year
log "Making directory structure"
begin
Dir.mkdir(name)
rescue Errno::EEXIST
  puts "Directory exists.".color(:red)
  exit
end
log "Trying to get your name from your git file..."
author = exc("git config --global user.name").chomp

if author
  log "found: #{author}"
else
  err "Failed."
  print "What is your name? "
  author = STDIN.readline.chomp
end

log "Trying to get your email from your git file..."
email = exc("git config --global user.email").chomp

if email
  log "found: #{email}"
else
  err "Failed."
  print "What is your email? "
  email = STDIN.readline.chomp
end

log "What is the one line summary of your gem?"
summary = STDIN.readline.chomp

log ("Optional: If you have any executables, what are they called? Multiple names should be separated with a space.")
executables = STDIN.readline.chomp.split

executables = executables.map do |e|
  if e =~ /^bin\//
    return e.gsub("bin/", "")
  end
  e
end

log "Optional: If you have any files, what are they called? Multiple names should be separated with a space. Example: lib/test.rb bin/test"
files = STDIN.readline.chomp.split

executables.each do |exe|
  files << "bin/" + exe
end

log "Optional: If the project has a homepage, enter it now:"
homepage = STDIN.readline.chomp

log "writing gemspec and other files"

Dir.glob(File.dirname(__FILE__) + "/templates/*.erb").each do |file|
  # second param to erb.new: safety level (0=min, 4=max).
  # third param: suppress newlines after <%= %> tags
  res = ERB.new(File.open(file).read, 0, "<>").result(binding)
  if file =~ /gemspec.erb$/
    new_name = name + ".gemspec"
  else
    new_name = File.basename(file).gsub(".erb", "")
  end
  File.open(name + "/" + new_name, "w+").write(res)
end

unless executables.empty?
  log "making executables directory"
  exc "mkdir #{name}/bin"
end

unless files.empty?
  log "making lib directory"
  exc "mkdir #{name}/lib"
end

log("DONE!")

puts <<-EOF
A basic structure for your gem has been created.
Next Steps:

#{("STEP 1: ADD FILES").color(:blue)}
Add your project's files to #{name.color(:blue)}.

#{("STEP 2: INSPECT").color(:blue)}
Check out #{(name + "/" + name + ".gemspec").color(:blue)} and
make any additional changes you need.

#{("STEP 3: BUILD").color(:blue)}
run `#{("gem build " + name + ".gemspec").color(:purple)}`

#{("STEP 4: INSTALL").color(:blue)}
run `#{("gem install " + name).color(:purple)}`

#{("STEP 5: TEST").color(:blue)}
run `#{("irb -r rubygems -r " + name).color(:purple)}` and
make sure the gem gets loaded.

#{("STEP 6: DISTRIBUTE").color(:blue)}
If everything looks good, push your gem to rubygems.org!
run `#{("gem push " + name + "-" + version + ".gem").color(:purple)}`

You need to have a rubygems account set up on your machine for this.
If you do not, check out:

  #{"http://guides.rubygems.org/make-your-own-gem/#first-gem".color(:green)}

EOF
